"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = __importDefault(require("debug"));
const debug = debug_1.default("decoder:decode:special");
const DecodeUtils = __importStar(require("truffle-decode-utils"));
const value_1 = __importDefault(require("./value"));
function decodeSpecial(definition, pointer, info) {
    return __awaiter(this, void 0, void 0, function* () {
        if (DecodeUtils.Definition.typeClass(definition) === "magic") { //that's right, magic!
            return yield decodeMagic(definition, pointer, info);
        }
        else {
            return yield value_1.default(definition, pointer, info);
        }
    });
}
exports.default = decodeSpecial;
function decodeMagic(definition, pointer, info) {
    return __awaiter(this, void 0, void 0, function* () {
        let { state } = info;
        switch (pointer.special) {
            case "msg":
                return {
                    data: yield value_1.default(DecodeUtils.Definition.MSG_DATA_DEFINITION, { calldata: {
                            start: 0,
                            length: state.calldata.length
                        } }, info),
                    sig: yield value_1.default(DecodeUtils.Definition.MSG_SIG_DEFINITION, { calldata: {
                            start: 0,
                            length: DecodeUtils.EVM.SELECTOR_SIZE,
                        } }, info),
                    sender: yield value_1.default(DecodeUtils.Definition.spoofAddressPayableDefinition("sender"), { special: "sender" }, info),
                    value: yield value_1.default(DecodeUtils.Definition.spoofUintDefinition("value"), { special: "value" }, info)
                };
            case "tx":
                return {
                    origin: yield value_1.default(DecodeUtils.Definition.spoofAddressPayableDefinition("origin"), { special: "origin" }, info),
                    gasprice: yield value_1.default(DecodeUtils.Definition.spoofUintDefinition("gasprice"), { special: "gasprice" }, info)
                };
            case "block":
                return Object.assign({ coinbase: yield value_1.default(DecodeUtils.Definition.spoofAddressPayableDefinition("coinbase"), { special: "coinbase" }, info) }, Object.assign({}, ...yield Promise.all(["difficulty", "gaslimit", "number", "timestamp"].map((variable) => __awaiter(this, void 0, void 0, function* () {
                    return ({
                        [variable]: yield value_1.default(DecodeUtils.Definition.spoofUintDefinition(variable), { special: variable }, info)
                    });
                })))));
            default:
                debug("Unrecognized magic variable!");
        }
    });
}
exports.decodeMagic = decodeMagic;
//# sourceMappingURL=special.js.map